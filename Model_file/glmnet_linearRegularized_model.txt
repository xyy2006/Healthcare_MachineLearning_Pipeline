# Content: The function templates used in 'glmnet_linearRegularized.r'. The algorithm may have more than one function which can be tuned.
# Usage:look up the manual before you specifiy the function arguments
# Note: always use hash sign '#' to comment
#		the function always start with ':functionName:subfunction:subsubfunction...'
# 		comment a ':function[:subfunc]' will make it run by default arguments setup in program script (unseen except you look up the source code). I recommend always put the function arguments here for convenience and avoid unforseen problem.
########################################################################################

# ==============RSForest is the module to be called=======================# 
# only allow one main module in one model file, e.g. ":module_name"
:glmnet_linearRegularized	# the main module name, only allow one in this file.
	data = data_input,
	response_variables = response_variables_vec,
	knowledge_driven_factors = knowledge_driven_factors_vec,
	data_driven_factors = data_driven_factors_vec,
	factors_annotation_table = factors_all,
	.seed=123,
	plotNameEssence = sprintf("glmnet_linearRegularized_plot_at_%s",nowTimeToString())
	
# ---------a function to settup the parallel scheme within rfsrc package.---------#
:glmnet_linearRegularized:cv.glmnet
	x = new_X_modelExpanded_overall,					# dont change
	y = unlist(data[,response_variables,with=F]),		# dont change
	family="gaussian",
	alpha=0.5, 
	lambda = NULL,
	nfolds=10, 
	keep=T,
	penalty.factor = keepKnowledgeFactor_seq,
	parallel=T,
	standardize = F	# 1 for lasso, 0 for ridge.
						# since we have many x in 0/1 value, we don't want to standardize. Usually it need standardize.
